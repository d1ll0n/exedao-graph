// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApplicationAdded extends EthereumEvent {
  get params(): ApplicationAdded__Params {
    return new ApplicationAdded__Params(this);
  }
}

export class ApplicationAdded__Params {
  _event: ApplicationAdded;

  constructor(event: ApplicationAdded) {
    this._event = event;
  }

  get applicant(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ApplicationCanceled extends EthereumEvent {
  get params(): ApplicationCanceled__Params {
    return new ApplicationCanceled__Params(this);
  }
}

export class ApplicationCanceled__Params {
  _event: ApplicationCanceled;

  constructor(event: ApplicationCanceled) {
    this._event = event;
  }

  get applicant(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ExtensionAdded extends EthereumEvent {
  get params(): ExtensionAdded__Params {
    return new ExtensionAdded__Params(this);
  }
}

export class ExtensionAdded__Params {
  _event: ExtensionAdded;

  constructor(event: ExtensionAdded) {
    this._event = event;
  }

  get extensionIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get metaHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ProposalSubmission extends EthereumEvent {
  get params(): ProposalSubmission__Params {
    return new ProposalSubmission__Params(this);
  }
}

export class ProposalSubmission__Params {
  _event: ProposalSubmission;

  constructor(event: ProposalSubmission) {
    this._event = event;
  }

  get submitter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get metaHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get votesCast(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProposalVote extends EthereumEvent {
  get params(): ProposalVote__Params {
    return new ProposalVote__Params(this);
  }
}

export class ProposalVote__Params {
  _event: ProposalVote;

  constructor(event: ProposalVote) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get votesCast(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProposalApproval extends EthereumEvent {
  get params(): ProposalApproval__Params {
    return new ProposalApproval__Params(this);
  }
}

export class ProposalApproval__Params {
  _event: ProposalApproval;

  constructor(event: ProposalApproval) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ProposalExpiration extends EthereumEvent {
  get params(): ProposalExpiration__Params {
    return new ProposalExpiration__Params(this);
  }
}

export class ProposalExpiration__Params {
  _event: ProposalExpiration;

  constructor(event: ProposalExpiration) {
    this._event = event;
  }

  get proposalHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class SharesBurned extends EthereumEvent {
  get params(): SharesBurned__Params {
    return new SharesBurned__Params(this);
  }
}

export class SharesBurned__Params {
  _event: SharesBurned;

  constructor(event: SharesBurned) {
    this._event = event;
  }

  get daoist(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SharesMinted extends EthereumEvent {
  get params(): SharesMinted__Params {
    return new SharesMinted__Params(this);
  }
}

export class SharesMinted__Params {
  _event: SharesMinted;

  constructor(event: SharesMinted) {
    this._event = event;
  }

  get daoist(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokenAdded extends EthereumEvent {
  get params(): TokenAdded__Params {
    return new TokenAdded__Params(this);
  }
}

export class TokenAdded__Params {
  _event: TokenAdded;

  constructor(event: TokenAdded) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TokenRemoved extends EthereumEvent {
  get params(): TokenRemoved__Params {
    return new TokenRemoved__Params(this);
  }
}

export class TokenRemoved__Params {
  _event: TokenRemoved;

  constructor(event: TokenRemoved) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TokenTransferred extends EthereumEvent {
  get params(): TokenTransferred__Params {
    return new TokenTransferred__Params(this);
  }
}

export class TokenTransferred__Params {
  _event: TokenTransferred;

  constructor(event: TokenTransferred) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TokenReceived extends EthereumEvent {
  get params(): TokenReceived__Params {
    return new TokenReceived__Params(this);
  }
}

export class TokenReceived__Params {
  _event: TokenReceived;

  constructor(event: TokenReceived) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ExeDAO__getDaoistResultDaoistStruct extends EthereumTuple {
  get daoist(): Address {
    return this[0].toAddress();
  }

  get shares(): BigInt {
    return this[1].toBigInt();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }
}

export class ExeDAO__getExtensionForResultExtensionStruct extends EthereumTuple {
  get metaHash(): Bytes {
    return this[0].toBytes();
  }

  get extensionAddress(): Address {
    return this[1].toAddress();
  }

  get useDelegate(): boolean {
    return this[2].toBoolean();
  }

  get bytecode(): Bytes {
    return this[3].toBytes();
  }

  get functionSignatures(): Array<Bytes> {
    return this[4].toBytesArray();
  }
}

export class ExeDAO__getProposalResultRetStruct extends EthereumTuple {
  get proposalHash(): Bytes {
    return this[0].toBytes();
  }

  get metaHash(): Bytes {
    return this[1].toBytes();
  }

  get votes(): BigInt {
    return this[2].toBigInt();
  }

  get expiryBlock(): BigInt {
    return this[3].toBigInt();
  }

  get proposalIndex(): BigInt {
    return this[4].toBigInt();
  }
}

export class ExeDAO__getTokenResultTokenValueStruct extends EthereumTuple {
  get tokenAddress(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExeDAO__getApplicationResultApplicationStruct extends EthereumTuple {
  get metaHash(): Bytes {
    return this[0].toBytes();
  }

  get weiTribute(): BigInt {
    return this[1].toBigInt();
  }

  get applicant(): Address {
    return this[2].toAddress();
  }

  get tokenTributes(): Array<Address> {
    return this[3].toAddressArray();
  }

  get tokenTributeValues(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get shares(): BigInt {
    return this[5].toBigInt();
  }
}

export class ExeDAO__submitOrVoteResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class ExeDAO__getExtensionResultValue0Struct extends EthereumTuple {
  get metaHash(): Bytes {
    return this[0].toBytes();
  }

  get extensionAddress(): Address {
    return this[1].toAddress();
  }

  get useDelegate(): boolean {
    return this[2].toBoolean();
  }

  get bytecode(): Bytes {
    return this[3].toBytes();
  }

  get functionSignatures(): Array<Bytes> {
    return this[4].toBytesArray();
  }
}

export class ExeDAO extends SmartContract {
  static bind(address: Address): ExeDAO {
    return new ExeDAO("ExeDAO", address);
  }

  nextNonce(daoist: Address): BigInt {
    let result = super.call("nextNonce", [EthereumValue.fromAddress(daoist)]);
    return result[0].toBigInt();
  }

  getDaoist(daoistAddress: Address): ExeDAO__getDaoistResultDaoistStruct {
    let result = super.call("getDaoist", [
      EthereumValue.fromAddress(daoistAddress)
    ]);
    return result[0].toTuple() as ExeDAO__getDaoistResultDaoistStruct;
  }

  getProposalMetaHash(proposalHash: Bytes): Bytes {
    let result = super.call("getProposalMetaHash", [
      EthereumValue.fromFixedBytes(proposalHash)
    ]);
    return result[0].toBytes();
  }

  getExtensionFor(
    funcSig: Bytes
  ): ExeDAO__getExtensionForResultExtensionStruct {
    let result = super.call("getExtensionFor", [
      EthereumValue.fromFixedBytes(funcSig)
    ]);
    return result[0].toTuple() as ExeDAO__getExtensionForResultExtensionStruct;
  }

  getProposal(proposalHash: Bytes): ExeDAO__getProposalResultRetStruct {
    let result = super.call("getProposal", [
      EthereumValue.fromFixedBytes(proposalHash)
    ]);
    return result[0].toTuple() as ExeDAO__getProposalResultRetStruct;
  }

  getToken(tokenAddress: Address): ExeDAO__getTokenResultTokenValueStruct {
    let result = super.call("getToken", [
      EthereumValue.fromAddress(tokenAddress)
    ]);
    return result[0].toTuple() as ExeDAO__getTokenResultTokenValueStruct;
  }

  getApplication(
    applicant: Address
  ): ExeDAO__getApplicationResultApplicationStruct {
    let result = super.call("getApplication", [
      EthereumValue.fromAddress(applicant)
    ]);
    return result[0].toTuple() as ExeDAO__getApplicationResultApplicationStruct;
  }

  getApprovalRequirements(funcSigs: Array<Bytes>): Array<i32> {
    let result = super.call("getApprovalRequirements", [
      EthereumValue.fromFixedBytesArray(funcSigs)
    ]);
    return result[0].toI32Array();
  }

  getMinimumTribute(): BigInt {
    let result = super.call("getMinimumTribute", []);
    return result[0].toBigInt();
  }

  submitWithMetaHash(proposalHash: Bytes, metaHash: Bytes): BigInt {
    let result = super.call("submitWithMetaHash", [
      EthereumValue.fromFixedBytes(proposalHash),
      EthereumValue.fromFixedBytes(metaHash)
    ]);
    return result[0].toBigInt();
  }

  getTotalShares(): BigInt {
    let result = super.call("getTotalShares", []);
    return result[0].toBigInt();
  }

  submitOrVote(proposalHash: Bytes): ExeDAO__submitOrVoteResult {
    let result = super.call("submitOrVote", [
      EthereumValue.fromFixedBytes(proposalHash)
    ]);
    return new ExeDAO__submitOrVoteResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  getExtension(index: BigInt): ExeDAO__getExtensionResultValue0Struct {
    let result = super.call("getExtension", [
      EthereumValue.fromUnsignedBigInt(index)
    ]);
    return result[0].toTuple() as ExeDAO__getExtensionResultValue0Struct;
  }

  getApprovalRequirement(funcSig: Bytes): i32 {
    let result = super.call("getApprovalRequirement", [
      EthereumValue.fromFixedBytes(funcSig)
    ]);
    return result[0].toI32();
  }
}

export class SetProposalDurationCall extends EthereumCall {
  get inputs(): SetProposalDurationCall__Inputs {
    return new SetProposalDurationCall__Inputs(this);
  }

  get outputs(): SetProposalDurationCall__Outputs {
    return new SetProposalDurationCall__Outputs(this);
  }
}

export class SetProposalDurationCall__Inputs {
  _call: SetProposalDurationCall;

  constructor(call: SetProposalDurationCall) {
    this._call = call;
  }

  get duration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProposalDurationCall__Outputs {
  _call: SetProposalDurationCall;

  constructor(call: SetProposalDurationCall) {
    this._call = call;
  }
}

export class TransferEtherCall extends EthereumCall {
  get inputs(): TransferEtherCall__Inputs {
    return new TransferEtherCall__Inputs(this);
  }

  get outputs(): TransferEtherCall__Outputs {
    return new TransferEtherCall__Outputs(this);
  }
}

export class TransferEtherCall__Inputs {
  _call: TransferEtherCall;

  constructor(call: TransferEtherCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get weiToSend(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferEtherCall__Outputs {
  _call: TransferEtherCall;

  constructor(call: TransferEtherCall) {
    this._call = call;
  }
}

export class CloseProposalCall extends EthereumCall {
  get inputs(): CloseProposalCall__Inputs {
    return new CloseProposalCall__Inputs(this);
  }

  get outputs(): CloseProposalCall__Outputs {
    return new CloseProposalCall__Outputs(this);
  }
}

export class CloseProposalCall__Inputs {
  _call: CloseProposalCall;

  constructor(call: CloseProposalCall) {
    this._call = call;
  }

  get proposalHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CloseProposalCall__Outputs {
  _call: CloseProposalCall;

  constructor(call: CloseProposalCall) {
    this._call = call;
  }
}

export class SafeExecuteCall extends EthereumCall {
  get inputs(): SafeExecuteCall__Inputs {
    return new SafeExecuteCall__Inputs(this);
  }

  get outputs(): SafeExecuteCall__Outputs {
    return new SafeExecuteCall__Outputs(this);
  }
}

export class SafeExecuteCall__Inputs {
  _call: SafeExecuteCall;

  constructor(call: SafeExecuteCall) {
    this._call = call;
  }

  get bytecode(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SafeExecuteCall__Outputs {
  _call: SafeExecuteCall;

  constructor(call: SafeExecuteCall) {
    this._call = call;
  }
}

export class ReceiveTokenCall extends EthereumCall {
  get inputs(): ReceiveTokenCall__Inputs {
    return new ReceiveTokenCall__Inputs(this);
  }

  get outputs(): ReceiveTokenCall__Outputs {
    return new ReceiveTokenCall__Outputs(this);
  }
}

export class ReceiveTokenCall__Inputs {
  _call: ReceiveTokenCall;

  constructor(call: ReceiveTokenCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get sender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ReceiveTokenCall__Outputs {
  _call: ReceiveTokenCall;

  constructor(call: ReceiveTokenCall) {
    this._call = call;
  }
}

export class ApproveTokenTransferCall extends EthereumCall {
  get inputs(): ApproveTokenTransferCall__Inputs {
    return new ApproveTokenTransferCall__Inputs(this);
  }

  get outputs(): ApproveTokenTransferCall__Outputs {
    return new ApproveTokenTransferCall__Outputs(this);
  }
}

export class ApproveTokenTransferCall__Inputs {
  _call: ApproveTokenTransferCall;

  constructor(call: ApproveTokenTransferCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ApproveTokenTransferCall__Outputs {
  _call: ApproveTokenTransferCall;

  constructor(call: ApproveTokenTransferCall) {
    this._call = call;
  }
}

export class AddExtensionCall extends EthereumCall {
  get inputs(): AddExtensionCall__Inputs {
    return new AddExtensionCall__Inputs(this);
  }

  get outputs(): AddExtensionCall__Outputs {
    return new AddExtensionCall__Outputs(this);
  }
}

export class AddExtensionCall__Inputs {
  _call: AddExtensionCall;

  constructor(call: AddExtensionCall) {
    this._call = call;
  }

  get extension(): AddExtensionCallExtensionStruct {
    return this._call.inputValues[0].value.toTuple() as AddExtensionCallExtensionStruct;
  }
}

export class AddExtensionCall__Outputs {
  _call: AddExtensionCall;

  constructor(call: AddExtensionCall) {
    this._call = call;
  }
}

export class AddExtensionCallExtensionStruct extends EthereumTuple {
  get metaHash(): Bytes {
    return this[0].toBytes();
  }

  get extensionAddress(): Address {
    return this[1].toAddress();
  }

  get useDelegate(): boolean {
    return this[2].toBoolean();
  }

  get bytecode(): Bytes {
    return this[3].toBytes();
  }

  get functionSignatures(): Array<Bytes> {
    return this[4].toBytesArray();
  }
}

export class RemoveTokenCall extends EthereumCall {
  get inputs(): RemoveTokenCall__Inputs {
    return new RemoveTokenCall__Inputs(this);
  }

  get outputs(): RemoveTokenCall__Outputs {
    return new RemoveTokenCall__Outputs(this);
  }
}

export class RemoveTokenCall__Inputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveTokenCall__Outputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }
}

export class SetApprovalRequirementCall extends EthereumCall {
  get inputs(): SetApprovalRequirementCall__Inputs {
    return new SetApprovalRequirementCall__Inputs(this);
  }

  get outputs(): SetApprovalRequirementCall__Outputs {
    return new SetApprovalRequirementCall__Outputs(this);
  }
}

export class SetApprovalRequirementCall__Inputs {
  _call: SetApprovalRequirementCall;

  constructor(call: SetApprovalRequirementCall) {
    this._call = call;
  }

  get funcSig(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get approvalRequirement(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetApprovalRequirementCall__Outputs {
  _call: SetApprovalRequirementCall;

  constructor(call: SetApprovalRequirementCall) {
    this._call = call;
  }
}

export class SubmitWithMetaHashCall extends EthereumCall {
  get inputs(): SubmitWithMetaHashCall__Inputs {
    return new SubmitWithMetaHashCall__Inputs(this);
  }

  get outputs(): SubmitWithMetaHashCall__Outputs {
    return new SubmitWithMetaHashCall__Outputs(this);
  }
}

export class SubmitWithMetaHashCall__Inputs {
  _call: SubmitWithMetaHashCall;

  constructor(call: SubmitWithMetaHashCall) {
    this._call = call;
  }

  get proposalHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get metaHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SubmitWithMetaHashCall__Outputs {
  _call: SubmitWithMetaHashCall;

  constructor(call: SubmitWithMetaHashCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveExtensionCall extends EthereumCall {
  get inputs(): RemoveExtensionCall__Inputs {
    return new RemoveExtensionCall__Inputs(this);
  }

  get outputs(): RemoveExtensionCall__Outputs {
    return new RemoveExtensionCall__Outputs(this);
  }
}

export class RemoveExtensionCall__Inputs {
  _call: RemoveExtensionCall;

  constructor(call: RemoveExtensionCall) {
    this._call = call;
  }

  get extIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveExtensionCall__Outputs {
  _call: RemoveExtensionCall;

  constructor(call: RemoveExtensionCall) {
    this._call = call;
  }
}

export class AddTokenCall extends EthereumCall {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class MintSharesCall extends EthereumCall {
  get inputs(): MintSharesCall__Inputs {
    return new MintSharesCall__Inputs(this);
  }

  get outputs(): MintSharesCall__Outputs {
    return new MintSharesCall__Outputs(this);
  }
}

export class MintSharesCall__Inputs {
  _call: MintSharesCall;

  constructor(call: MintSharesCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintSharesCall__Outputs {
  _call: MintSharesCall;

  constructor(call: MintSharesCall) {
    this._call = call;
  }
}

export class SubmitOrVoteCall extends EthereumCall {
  get inputs(): SubmitOrVoteCall__Inputs {
    return new SubmitOrVoteCall__Inputs(this);
  }

  get outputs(): SubmitOrVoteCall__Outputs {
    return new SubmitOrVoteCall__Outputs(this);
  }
}

export class SubmitOrVoteCall__Inputs {
  _call: SubmitOrVoteCall;

  constructor(call: SubmitOrVoteCall) {
    this._call = call;
  }

  get proposalHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SubmitOrVoteCall__Outputs {
  _call: SubmitOrVoteCall;

  constructor(call: SubmitOrVoteCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ExecuteApplicationCall extends EthereumCall {
  get inputs(): ExecuteApplicationCall__Inputs {
    return new ExecuteApplicationCall__Inputs(this);
  }

  get outputs(): ExecuteApplicationCall__Outputs {
    return new ExecuteApplicationCall__Outputs(this);
  }
}

export class ExecuteApplicationCall__Inputs {
  _call: ExecuteApplicationCall;

  constructor(call: ExecuteApplicationCall) {
    this._call = call;
  }

  get applicant(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ExecuteApplicationCall__Outputs {
  _call: ExecuteApplicationCall;

  constructor(call: ExecuteApplicationCall) {
    this._call = call;
  }
}

export class SetMinimumTributeCall extends EthereumCall {
  get inputs(): SetMinimumTributeCall__Inputs {
    return new SetMinimumTributeCall__Inputs(this);
  }

  get outputs(): SetMinimumTributeCall__Outputs {
    return new SetMinimumTributeCall__Outputs(this);
  }
}

export class SetMinimumTributeCall__Inputs {
  _call: SetMinimumTributeCall;

  constructor(call: SetMinimumTributeCall) {
    this._call = call;
  }

  get minimum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumTributeCall__Outputs {
  _call: SetMinimumTributeCall;

  constructor(call: SetMinimumTributeCall) {
    this._call = call;
  }
}

export class TransferTokenCall extends EthereumCall {
  get inputs(): TransferTokenCall__Inputs {
    return new TransferTokenCall__Inputs(this);
  }

  get outputs(): TransferTokenCall__Outputs {
    return new TransferTokenCall__Outputs(this);
  }
}

export class TransferTokenCall__Inputs {
  _call: TransferTokenCall;

  constructor(call: TransferTokenCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferTokenCall__Outputs {
  _call: TransferTokenCall;

  constructor(call: TransferTokenCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get shares(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _proposalDuration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get funcSigs(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get requirements(): Array<i32> {
    return this._call.inputValues[3].value.toI32Array();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends EthereumCall {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
