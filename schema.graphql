type Daoist @entity {
  id: ID!
  address: Bytes! # address
  shares: BigInt! # uint64
}

type Application @entity {
  id: ID!
  applicant: Bytes! # address
  shares: BigInt! # uint64
  metaHash: Bytes! # bytes32
  weiTribute: BigInt # uint256
  tokenTributes: [Bytes!] # address[];
  tokenTributeValues: [BigInt!] # uint256[]
  txHash: Bytes! # bytes32
  acceptedAt: Bytes # bytes32
  canceledAt: Bytes # bytes32
}

type Proposal @entity {
  id: ID!
  submitter: Bytes! # address
  proposalHash: Bytes! # bytes32
  metaHash: Bytes! # bytes32
  votesCast: BigInt! # uint64
  txHash: Bytes! # bytes32
  acceptedAt: BigInt # uint64
}

type Extension @entity {
  id: ID!
  extensionIndex: BigInt! # uint256
  metaHash: Bytes! # bytes32
  extensionAddress: Bytes! # address
  useDelegate: Boolean!
  functionSignatures: [Bytes!]! # bytes4[]
}

type Token @entity {
  id: ID!
  address: Bytes! # address
  balance: BigInt! # uint256
}